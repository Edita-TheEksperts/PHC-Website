generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Service {
  id          String       @id @default(uuid())
  name        String       @unique
  subServices SubService[] @relation("ServiceToSubService")
  users       User[]       @relation("UserServices")
}

model SubService {
  id        String   @id @default(uuid())
  name      String   @unique
  serviceId String?
  service   Service? @relation("ServiceToSubService", fields: [serviceId], references: [id])
  users     User[]   @relation("UserSubServices")
}

model Schedule {
  id             Int           @id @default(autoincrement())
  day            String
  startTime      String
  hours          Int
  userId         String
  kilometers     Int?
  employeeId     String?
  date           DateTime?
  captured       Boolean       @default(false)
  status         String        @default("active")
  serviceName    String?
  subServiceName String?
  employee       Employee?     @relation(fields: [employeeId], references: [id])
  user           User          @relation(fields: [userId], references: [id])
  transactions   Transaction[]
}

model Vacation {
  id         String    @id @default(uuid())
  userId     String?
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime  @default(now())
  employeeId String?
  employee   Employee? @relation(fields: [employeeId], references: [id])
  user       User?     @relation(fields: [userId], references: [id])
  status     VacationStatus @default(pending)
  
}

enum Role {
  admin
  client
  employee
}

enum VacationStatus {
  pending
  approved
  declined
}


model User {
  id                      String        @id @default(uuid())
  email                   String        @unique
  passwordHash            String
  role                    Role          @default(client)
  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt
  phone                   String?
  address                 String
  frequency               String
  cardNumber              String?
  cvc                     String?
  duration                Int?
  emergencyContactName    String?
  emergencyContactPhone   String?
  expiryDate              String?
  firstDate               DateTime?
  languages               String?
  pets                    String?
  appointments            String?
  appointmentsOther       String?
  briefkasten             String?
  mobility                String?
  postfach                String?
  shoppingAssist          String?
  shoppingType            String?
  sonstige                String?
  transport               String?
  form4Completed          Boolean?      @default(false)
  postalCode              String?
  firstName               String?
  lastName                String?
  allergies               String?
  specialRequests         String?
  totalPayment            Float?
  paymentIntentId         String?
  aids                    String?
  aidsOther               String?
  allergyDetails          String?
  basicCare               String?
  basicCareOther          String?
  communicationHÃ¶ren     String?
  communicationSehen      String?
  communicationSprechen   String?
  companionship           String?
  cooking                 String?
  foodSupport             String?
  form1Completed          Boolean?      @default(false)
  form2Completed          Boolean?      @default(false)
  form3Completed          Boolean?      @default(false)
  hasAllergies            String?
  hasTech                 String?
  healthActivities        String?
  healthActivitiesOther   String?
  height                  String?
  householdPeople         Int?
  householdRooms          Int?
  householdTasks          Json?
  incontinence            String?
  medicalFindings         String?
  mentalConditions        String?
  mentalSupport           String?
  outings                 String?
  playsCards              String?
  reads                   String?
  weight                  String?
  additionalAccompaniment String?
  allergyCheck            String?
  allergyWhich            String?
  appointmentOther        String?
  appointmentTypes        String?
  basicCareNeeds          String?
  basicCareOtherField     String?
  behaviorTraits          String?
  biographyWork           String?
  cardGames               String?
  careArrivalConditions   String?
  careCity                String?
  careEntrance            String?
  careEntranceDetails     String?
  careFirstName           String?
  careHasParking          String?
  careLastName            String?
  carePhone               String?
  carePostalCode          String?
  careStreet              String?
  communicationHearing    String?
  communicationSpeech     String?
  communicationVision     String?
  companionshipSupport    String?
  foodSupportTypes        String?
  healthFindings          String?
  healthPromotionOther    String?
  healthPromotions        String?
  incontinenceTypes       String?
  jointCooking            String?
  mailboxDetails          String?
  mailboxKeyLocation      String?
  mentalDiagnoses         String?
  mentalSupportNeeded     String?
  mobilityAids            String?
  physicalState           String?
  reading                 String?
  shoppingItems           String?
  shoppingWithClient      String?
  techAvailable           String?
  toolsAvailable          String?
  toolsOther              String?
  transportOption         String?
  trips                   String?
  stripeCustomerId        String?
  stripePaymentMethodId   String?
  status                  String?       @default("open")
  resetToken              String?
  resetTokenExpiry        DateTime?
  assignments             Assignment[]
  reminders               Reminder[]
  schedules               Schedule[]
  transactions            Transaction[]
  vacations               Vacation[]
  services                Service[]     @relation("UserServices")
  subServices             SubService[]  @relation("UserSubServices")
}

model Reminder {
  id          String   @id @default(uuid())
  userId      String
  type        String
  scheduledAt DateTime
  sent        Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}

model Assignment {
  id                 String    @id @default(uuid())
  userId             String
  employeeId         String
  status             String    @default("active")
  createdAt          DateTime  @default(now())
  confirmationStatus String    @default("pending")
  firstDate          DateTime?
  serviceName        String?
  employee           Employee  @relation(fields: [employeeId], references: [id])
  user               User      @relation(fields: [userId], references: [id])
}

model RejectionWarning {
  id         String   @id @default(uuid())
  employeeId String
  sentAt     DateTime @default(now())
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model Feedback {
  id         String   @id @default(uuid())
  userId     String
  employeeId String
  comment    String
  rating     Int
  createdAt  DateTime @default(now())
}

model Employee {
  id                   String             @id @default(uuid())
  email                String             @unique
  firstName            String
  lastName             String
  phone                String?
  address              String?
  residencePermit      String?
  experienceYears      String
  experienceWhere      String?
  hasLicense           Boolean
  availabilityFrom     DateTime
  availabilityDays     String[]
  servicesOffered      String[]
  howFarCanYouTravel   String?
  status               String             @default("pending")
  createdAt            DateTime           @default(now())
  bodyCareSupport      String?
  carAvailableForWork  String?
  city                 String?
  communicationTraits  String[]
  country              String?
  dietaryExperience    String[]
  experienceCompany    String?
  hasAllergies         String?
  hasCar               String?
  houseNumber          String?
  howDidYouHearAboutUs String?
  languageOther        String?
  languages            String[]
  licenseType          String?
  nightShiftFrequency  String?
  nightShifts          String?
  onCallAvailable      String?
  salutation           String?
  smoker               String?
  specialTrainings     String[]
  travelSupport        String?
  weekendReady         String?
  worksWithAnimals     String?
  zipCode              String?
  desiredWeeklyHours   String?
  certificateFile      String?
  cvFile               String?
  drivingLicenceFile   String?
  passportFile         String?
  policeLetterFile     String?
  profilePhoto         String?
  visaFile             String?
  password             String?
  canton               String?
  nationality          String?
  accountHolder        String?
  bankName             String?
  bic                  String?
  iban                 String?
  invited              Boolean            @default(false)
  inviteSentAt         DateTime?
  assignments          Assignment[]
  rejectionWarnings    RejectionWarning[]
  schedules            Schedule[]
  transactions         Transaction[]
  vacations            Vacation[]
}

model Transaction {
  id             String   @id @default(uuid())
  scheduleId     Int
  userId         String
  employeeId     String
  amountClient   Float
  amountEmployee Float
  status         String   @default("pending")
  createdAt      DateTime @default(now())
  employee       Employee @relation(fields: [employeeId], references: [id])
  schedule       Schedule @relation(fields: [scheduleId], references: [id])
  user           User     @relation(fields: [userId], references: [id])
}

model EmailTemplate {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  subject   String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
