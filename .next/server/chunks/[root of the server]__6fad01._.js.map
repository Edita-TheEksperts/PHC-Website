{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/EditaLatifi/Documents/PHC-Website1/src/pages/api/sendEmail.js"],"sourcesContent":["import nodemailer from 'nodemailer';\r\nimport formidable from \"formidable\";\r\nimport fs from \"fs\";\r\n\r\nexport const config = {\r\n  api: {\r\n    bodyParser: false, \r\n  },\r\n};\r\n\r\nexport default async function handler(req, res) {\r\n  if (req.method === 'POST') {\r\n    const form = formidable({ multiples: true });\r\n\r\n    form.parse(req, async (err, fields, files) => {\r\n      if (err) {\r\n        console.error(\"Error parsing form:\", err);\r\n        return res.status(500).json({ message: \"Error parsing form\" });\r\n      }\r\n\r\n      console.log(\"Fields:\", fields);\r\n      console.log(\"Files:\", files);\r\n\r\n      const { name, vorname, email, region, questions } = fields;\r\n\r\n      // Validate required fields\r\n      if (!name ||!vorname || !email || !region || !questions) {\r\n        return res.status(400).json({ error: 'Missing required fields' });\r\n      }\r\n\r\n      // Create transporter for sending email using Nodemailer\r\n      const transporter = nodemailer.createTransport({\r\n        host: 'asmtp.mail.hostpoint.ch',\r\n        port: 465,\r\n        secure: true,\r\n        auth: {\r\n          user: 'landingpage@phc.ch',\r\n          pass: '45uYjTaR_N!x4AE',\r\n        },\r\n      });\r\n\r\n      try {\r\n        // Verify the connection configuration for Nodemailer\r\n        await transporter.verify();\r\n\r\n        // Prepare the email HTML body\r\n        const htmlContent = `\r\n          <div style=\"font-family: Arial, sans-serif; line-height: 1.6; max-width: 600px; margin: auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background-color: #f9f9f9;\">\r\n            <h2 style=\"color: #2c3e50; text-align: center;\">Neues Formular aus dem Jobs-Kontaktformular</h2>\r\n            <p style=\"color: #34495e; text-align: center;\">Nachfolgend finden Sie die Details:</p>\r\n            <table style=\"width: 100%; border-collapse: collapse; margin-top: 20px;\">\r\n              <tr>\r\n                <td style=\"padding: 10px; border: 1px solid #ddd;\"><strong>Name:</strong></td>\r\n                <td style=\"padding: 10px; border: 1px solid #ddd;\">${name}</td>\r\n              </tr>\r\n                 <tr>\r\n                <td style=\"padding: 10px; border: 1px solid #ddd;\"><strong>Vorname:</strong></td>\r\n                <td style=\"padding: 10px; border: 1px solid #ddd;\">${vorname}</td>\r\n              </tr>\r\n              <tr>\r\n                <td style=\"padding: 10px; border: 1px solid #ddd;\"><strong>Email:</strong></td>\r\n                <td style=\"padding: 10px; border: 1px solid #ddd;\">${email}</td>\r\n              </tr>\r\n              <tr>\r\n                <td style=\"padding: 10px; border: 1px solid #ddd;\"><strong>Region:</strong></td>\r\n                <td style=\"padding: 10px; border: 1px solid #ddd;\">${region}</td>\r\n              </tr>\r\n            </table>\r\n            <p style=\"margin-top: 20px; color: #34495e; text-align: center;\">Vielen Dank!</p>\r\n          </div>\r\n        `;\r\n\r\n        // Prepare the attachments array, checking if CV exists\r\n        let attachments = [];\r\n        if (files.cv && Array.isArray(files.cv) && files.cv[0]?.filepath) {\r\n          const cvFile = files.cv[0]; // Get the first file from the list\r\n          const cvFileContent = fs.readFileSync(cvFile.filepath, { encoding: \"base64\" });\r\n          attachments.push({\r\n            filename: cvFile.originalFilename,\r\n            content: cvFileContent,\r\n            encoding: 'base64',\r\n          });\r\n        }\r\n\r\n        // Send the email with the form data and attachment (if available)\r\n        const info = await transporter.sendMail({\r\n          from: `\"Jobs Landing Page\" <landingpage@phc.ch>`,\r\n          to: 'landingpage@phc.ch',\r\n          cc: ['edita.latifi@the-eksperts.com','jobs@phc.ch'],\r\n          subject: `Formular: Jobs Landing Page ${name}`,\r\n          html: htmlContent,\r\n          attachments: attachments,\r\n        });\r\n\r\n        console.log(\"Message sent: %s\", info.messageId);\r\n        console.log(\"Message sent details: \", info);  // Log the details of the sent email\r\n\r\n        res.status(200).json({ message: 'Email sent successfully!' });\r\n\r\n      } catch (error) {\r\n        console.error('Error sending email:', error.message);\r\n        res.status(500).json({ error: `Failed to send email: ${error.message}` });\r\n      }\r\n    });\r\n  } else {\r\n    res.setHeader('Allow', ['POST']);\r\n    res.status(405).json({ error: 'Method not allowed' });\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;AAEO,MAAM,SAAS;IACpB,KAAK;QACH,YAAY;IACd;AACF;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC5C,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,MAAM,OAAO,CAAA,GAAA,oHAAA,CAAA,UAAU,AAAD,EAAE;YAAE,WAAW;QAAK;QAE1C,KAAK,KAAK,CAAC,KAAK,OAAO,KAAK,QAAQ;YAClC,IAAI,KAAK;gBACP,QAAQ,KAAK,CAAC,uBAAuB;gBACrC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAAqB;YAC9D;YAEA,QAAQ,GAAG,CAAC,WAAW;YACvB,QAAQ,GAAG,CAAC,UAAU;YAEtB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG;YAEpD,2BAA2B;YAC3B,IAAI,CAAC,QAAO,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW;gBACvD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO;gBAA0B;YACjE;YAEA,wDAAwD;YACxD,MAAM,cAAc,6GAAA,CAAA,UAAU,CAAC,eAAe,CAAC;gBAC7C,MAAM;gBACN,MAAM;gBACN,QAAQ;gBACR,MAAM;oBACJ,MAAM;oBACN,MAAM;gBACR;YACF;YAEA,IAAI;gBACF,qDAAqD;gBACrD,MAAM,YAAY,MAAM;gBAExB,8BAA8B;gBAC9B,MAAM,cAAc,CAAC;;;;;;;mEAOsC,EAAE,KAAK;;;;mEAIP,EAAE,QAAQ;;;;mEAIV,EAAE,MAAM;;;;mEAIR,EAAE,OAAO;;;;;QAKpE,CAAC;gBAED,uDAAuD;gBACvD,IAAI,cAAc,EAAE;gBACpB,IAAI,MAAM,EAAE,IAAI,MAAM,OAAO,CAAC,MAAM,EAAE,KAAK,MAAM,EAAE,CAAC,EAAE,EAAE,UAAU;oBAChE,MAAM,SAAS,MAAM,EAAE,CAAC,EAAE,EAAE,mCAAmC;oBAC/D,MAAM,gBAAgB,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,OAAO,QAAQ,EAAE;wBAAE,UAAU;oBAAS;oBAC5E,YAAY,IAAI,CAAC;wBACf,UAAU,OAAO,gBAAgB;wBACjC,SAAS;wBACT,UAAU;oBACZ;gBACF;gBAEA,kEAAkE;gBAClE,MAAM,OAAO,MAAM,YAAY,QAAQ,CAAC;oBACtC,MAAM,CAAC,wCAAwC,CAAC;oBAChD,IAAI;oBACJ,IAAI;wBAAC;wBAAgC;qBAAc;oBACnD,SAAS,CAAC,4BAA4B,EAAE,MAAM;oBAC9C,MAAM;oBACN,aAAa;gBACf;gBAEA,QAAQ,GAAG,CAAC,oBAAoB,KAAK,SAAS;gBAC9C,QAAQ,GAAG,CAAC,0BAA0B,OAAQ,oCAAoC;gBAElF,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAA2B;YAE7D,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,wBAAwB,MAAM,OAAO;gBACnD,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO,CAAC,sBAAsB,EAAE,MAAM,OAAO,EAAE;gBAAC;YACzE;QACF;IACF,OAAO;QACL,IAAI,SAAS,CAAC,SAAS;YAAC;SAAO;QAC/B,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAqB;IACrD;AACF"}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/EditaLatifi/Documents/PHC-Website1/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/EditaLatifi/Documents/PHC-Website1/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/EditaLatifi/Documents/PHC-Website1/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/EditaLatifi/Documents/PHC-Website1/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,2HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,2HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}